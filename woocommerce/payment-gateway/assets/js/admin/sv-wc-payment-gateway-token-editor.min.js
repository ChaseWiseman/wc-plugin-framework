
/*
 WooCommerce SkyVerge Payment Gateway Framework Token Editor CoffeeScript
 Version 4.3.0-dev

 Copyright (c) 2016, SkyVerge, Inc.
 Licensed under the GNU General Public License v3.0
 http://www.gnu.org/licenses/gpl-3.0.html
 */

(function() {
  jQuery(document).ready(function($) {
    "use strict";
    var ref, wc_payment_gateway_token_editor;
    wc_payment_gateway_token_editor = (ref = window.wc_payment_gateway_token_editor) != null ? ref : {};
    $('.sv_wc_payment_gateway_token_editor').each(function() {
      var tokens;
      tokens = $(this).find('tr.token');
      if (tokens.length === 0) {
        return $(this).find('tr.no-tokens').show();
      } else {
        return $(this).find('tr.no-tokens').hide();
      }
    });
    $('.sv_wc_payment_gateway_token_editor').on('click', '.button[data-action="remove"]', function(e) {
      var data, editor, row;
      e.preventDefault();
      editor = $(this).closest('table');
      editor.block({
        message: null,
        overlayCSS: {
          background: '#fff',
          opacity: 0.6
        }
      });
      if (confirm(wc_payment_gateway_token_editor.actions.remove_token.ays)) {
        row = $(this).closest('tr');
        if (row.hasClass('new-token')) {
          row.remove();
        } else {
          data = {
            action: 'wc_payment_gateway_' + editor.data('gateway-id') + '_admin_remove_payment_token',
            user_id: $(this).data('user-id'),
            token_id: $(this).data('token-id'),
            security: wc_payment_gateway_token_editor.actions.remove_token.nonce
          };
          $.post(wc_payment_gateway_token_editor.ajax_url, data, function(response) {
            if (response.success === true) {
              return $(row).remove();
            }
          });
        }
        if (editor.find('tr.token').length === 0) {
          editor.find('tr.no-tokens').show();
        }
      }
      return editor.unblock();
    });
    $('table.sv_wc_payment_gateway_token_editor').on('click', '.button[data-action="add-new"]', function(e) {
      var body, count, data, editor;
      e.preventDefault();
      editor = $(this).closest('table');
      editor.block({
        message: null,
        overlayCSS: {
          background: '#fff',
          opacity: 0.6
        }
      });
      body = editor.find('tbody.tokens');
      count = body.find('tr.token').length;
      data = {
        action: 'wc_payment_gateway_' + editor.data('gateway-id') + '_admin_get_blank_payment_token',
        index: count + 1,
        security: wc_payment_gateway_token_editor.actions.add_token.nonce
      };
      return $.post(wc_payment_gateway_token_editor.ajax_url, data, function(response) {
        if (response.success === true) {
          body.append(response.data);
        }
        editor.find('tr.no-tokens').hide();
        return editor.unblock();
      });
    });
    return $('table.sv_wc_payment_gateway_token_editor').on('click', '.button[data-action="refresh"]', function(e) {
      var body, count, data, editor;
      e.preventDefault();
      editor = $(this).closest('table');
      editor.block({
        message: null,
        overlayCSS: {
          background: '#fff',
          opacity: 0.6
        }
      });
      body = editor.find('tbody.tokens');
      count = body.find('tr.token').length;
      data = {
        action: 'wc_payment_gateway_' + editor.data('gateway-id') + '_admin_refresh_payment_tokens',
        user_id: $(this).data('user-id'),
        security: wc_payment_gateway_token_editor.actions.refresh.nonce
      };
      return $.post(wc_payment_gateway_token_editor.ajax_url, data, function(response) {
        if (response.success === true) {
          if (response.data) {
            editor.find('tr.no-tokens').hide();
            body.html(response.data);
          } else {
            body.empty();
            editor.find('tr.no-tokens').show();
          }
        }
        return editor.unblock();
      });
    });
  });

}).call(this);

//# sourceMappingURL=sv-wc-payment-gateway-token-editor.min.js.map
